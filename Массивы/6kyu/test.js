'use strict';
// ОПИСАНИЕ:
// В этом ката от вас требуется отсортировать массив 32-битных целых чисел в порядке возрастания количества их бит .

// Например, дан массив [7, 6, 15, 8]

// 7 имеет 3 бита (000...0 111 )
// 6 имеет 2 бита (000...0 11 0)
// 15 имеет 4 бита (000... 1111 )
// 8 имеет 1 на бите (000... 1 000)
// Таким образом, массив в отсортированном порядке будет иметь вид [8, 6, 7, 15] .

// В случаях, когда два числа имеют одинаковое количество бит, сравните их действительные значения.

// Например, между 10 (...1010) и 12 (...1100) оба числа имеют одинаковое количество битов « 2 », но целое число 10 меньше 12, поэтому оно стоит первым в отсортированном порядке.

// Ваша задача — написать функцию, которая принимает массив целых чисел и сортирует их, как описано выше.

// Примечание: ваше решение должно сортировать массив на месте .

// Пример:

// [3, 8, 3, 6, 5, 7, 9, 1]   =>    [1, 8, 3, 3, 5, 6, 9, 7];

function sortByBit(arr) {
    return arr.map(num => num.toString(16))
}

console.log(sortByBit([3, 8, 3, 6, 5, 7, 9, 1]));